kustomize:
  patches:
  #- target:
  #    version: .*
  #    kind: StatefulSet
  #    name: hajimari
  #  patch: |-
  #    - op: remove
  #      path: /spec/template/spec/initContainers/0/env/2/value
  - target:
      version: .*
      kind: (StatefulSet|Deployment)
      name: hajimari.*
    patch: |-
      - op: add
        path: /spec/template/spec/nodeSelector
        value: 
          type: main

context:
    persistence:
      data:
        enabled: true
        #existingClaim: hajimari-data
        storageClass: longhorn
        accessMode: ReadWriteOnce
        size: 200Mi

    hajimari:
      name: "APE Y"
      defaultEnable: true
      namespaceSelector:
        matchNames:
          - sys
          - mon
          - media
          - iot
          - home
          - gitops
          - game

      searchProviders:
      - name: Google
        token: g
        icon: simple-icons:google
        searchUrl: https://www.google.com/search?q={query}
        url: https://www.google.com
      - name: IMDB
        token: i
        icon: simple-icons:imdb
        searchUrl: https://www.imdb.com/find?q={query}
        url: https://www.imdb.com
      - name: Reddit
        token: r
        icon: simple-icons:reddit
        searchUrl: https://www.reddit.com/search?q={query}
        url: https://www.reddit.com

      customApps:
      - group: Work
        apps:
        - name: Git
          icon: gitea
          url: 'https://gitea.{{ args.domain }}'
      - group: Sys
        apps:
        - name: Longhorn
          icon: longhorn
          url: 'https://longhorn.{{ args.domain }}'
        - name: Argo
          icon: argocd
          url: 'https://argocd.{{ args.domain }}'

      globalBookmarks:
      - group: Cloud
        bookmarks:
        - name: Gmail
          url: 'http://gmail.com'
        - name: gDrive
          url: 'https://drive.google.com'
        - name: iCloud
          url: 'https://icloud.com'
        - name: Dropbox
          url: 'https://dropbox.com'
      - group: Media
        bookmarks:
        - name: iVysilani
          url: 'https://www.ceskatelevize.cz/ivysilani/'
        - name: Spotify
          url: 'http://browse.spotify.com'
        - name: YouTube
          url: 'https://youtube.com/feed/subscriptions'
      - group: Reading
        bookmarks:
        - name: Zive.cz
          url: 'https://www.zive.cz/'
        - name: Seznamzpravy.cz
          url: 'https://www.seznamzpravy.cz'
      - group: Tech
        bookmarks:
        - name: Acond TC
          url: 'http://192.168.96.3'
        - name: Rekuperace
          url: 'http://192.168.96.4'
        - name: Mikrotik Router
          url: 'http://172.31.1.1'

    # FIXME, DEAL with this ingress setup
    ingress:
      main:
        enabled: {% if args.ingress %}true{% endif %}
        ingressClassName: {{ args.ingress }}
        annotations:
          #kubernetes.io/ingress.class: "traefik"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.tls: "true"
          #traefik.ingress.kubernetes.io/router.middlewares: system-ingress-rfc1918-ips@kubernetescrd
          hajimari.io/enable: "true"
          hajimari.io/icon: shield-check
          hajimari.io/group: network
          hajimari.io/appName: hajimari
        hosts:
        - host: hajimari.{{ args.domain }}
          paths:
          - path: /
            pathType: Prefix
        - host: portal.{{ args.domain }}
          paths:
          - path: /
            pathType: Prefix
        - host: p.{{ args.domain }}
          paths:
          - path: /
            pathType: Prefix

        tls:
        - hosts:
           - hajimari.{{ args.domain }}
           - portal.{{ args.domain }}
           - p.{{ args.domain }}
