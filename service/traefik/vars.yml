# vim: ft=yaml syntax=yaml sts=2 ts=2 sw=2
# example configuration

helmChart:
  # renovate: registryUrl=https://helm.traefik.io/traefik
  repo: https://helm.traefik.io/traefik
  chartName: traefik
  chartVersion: 34.2.0 # 26.0.0
  releaseName: traefik
  namespace: sys
  skipCRDs: false
  skipPrePull: true
  #skipUpdate: true


secrets:
  # cluster:
  #   vip:
  #     traefik: 1.1.1.1
  # traefik:
  #   basicauth:
  #     htpasswd: xxx
  #   resolver:
  #     tokens:
  #       example.com: xxx


kustomize:
  labels:
  - includeSelectors: true
    pairs:
      app: traefik
  resources:
    - helm-rendered.yaml
  generatorOptions:
    disableNameSuffixHash: true


# https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml
context:
  appname: traefik

  fullnameOverride: traefik

  installCRDs: true

  providers:
    kubernetesCRD:
      enabled: true
      allowCrossNamespace: false
      allowExternalNameServices: false
      allowEmptyServices: true # return 503 when there is no endpoints available
      # -- When the parameter is set, only resources containing an annotation with the same value are processed.
      #ingressClass: "traefik"
      # -- Selector, ie: environment=production,method=traefik
      # labelSelector: environment=production,method=traefik
      # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces.
      namespaces: []

  kubernetesIngress:
    enabled: true
    allowExternalNameServices: false
    allowEmptyServices: true # return 503 when there is no endpoints available
    # -- When ingressClass is set, only Ingresses containing an annotation with the same value are processed. Otherwise, Ingresses missing the annotation, having an empty value, or the value traefik are processed.
    #ingressClass: "traefik" # @schema type:[string, null]
    # -- Selector, ie: environment=production,method=traefik
    # labelSelector: environment=production,method=traefik
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces.
    namespaces: []


  # -- Create a default IngressClass for Traefik
  ingressClass:
    enabled: true
    isDefaultClass: true
    #fallbackApiVersion: v1


  globalArguments:
  #- "--global.checknewversion"

  - --providers.kubernetesingress.ingressendpoint.ip={{ secrets.cluster.vip.traefik }}
  - --providers.kubernetesingress.ingressclass=traefik

  - --metrics.prometheus=true
  - --metrics.prometheus.entryPoint=metrics

  #- "--entryPoints.websecure.http.tls=true"
  #- "--entryPoints.websecure2.http.tls=true" # FIXME

  persistence:
    name: data
    enabled: true
    path: /data
    size: 128Mi
    accessMode: ReadWriteOnce
    storageClass: default


  # Options for the main traefik service, where the entrypoints traffic comes from.
  service:
      enabled: true
      single: false                # listen on both, tcp/udp # FIXME
      type: LoadBalancer

  ports:
    traefik:
      # -- You SHOULD NOT expose the traefik port on production deployments.
      expose: {"default":false}
    metrics:
        port: 8082
        expose:  {"default":true }
        exposedPort: 8082

  dashboard:
    enable: true

  tlsOptions:
    default:
      minVersion: VersionTLS12
      maxVersion: VersionTLS13
      sniStrict: true

  pilot:
    enabled: false

  logs:
      general:
          format: json
          level: TRACE
      access:
          enabled: true
          format: json

  metrics:
      prometheus:
          enabled: true
          entryPoint: metrics

  affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                     - traefik
              topologyKey: "kubernetes.io/hostname"

  autoscaling:
      enabled: false
  #     minReplicas: 1
  #     maxReplicas: 10
  #     metrics:
  #     - type: Resource
  #       resource:
  #         name: cpu
  #         targetAverageUtilization: 60
  #     - type: Resource
  #       resource:
  #         name: memory
  #         targetAverageUtilization: 60
