# vim: ft=yaml syntax=yaml sts=2 ts=2 sw=2


context:
  persistence:
    data:
      enabled: true
      storageClass: "longhorn"
      accessMode: ReadWriteOnce
      size: 1Gi

  service:
    main:
      # annotations:
      #   metallb.universe.tf/allow-shared-ip: 'true'
      type: LoadBalancer
      # loadBalancerIP: 172.31.5.31
      #externalTrafficPolicy: Local
      primary: true

      ports:
        http:
          port: 8443
          protocol: HTTPS
          exposedPort: 443
        portal-http:
          enabled: false
        # disable all UDP on main
        stun:
          enabled: false
        syslog:
          enabled: false
        discovery:
          enabled: false

    udp:
      enabled: true
      # annotations:
      #   metallb.universe.tf/allow-shared-ip: 'true'
      type: LoadBalancer
      # externalIPs:
      # - 172.31.5.37
      loadBalancerIP: {{ secrets.cluster.vip.unifi_udp }}
      externalTrafficPolicy: Cluster # Cluster = source ip preservation

      ports:
        stun:
          enabled: true
          port: 3478
          protocol: UDP
          #nodePort: 3478 # TO TEST
        syslog:
          enabled: true
          port: 5514
          protocol: UDP
          #nodePort: 5514 # TO TEST
        discovery:
          enabled: true
          port: 10001
          protocol: UDP
          #nodeport: 10001 # TO TEST

  ingress:
    main:
      enabled: true
      ingressClassName: "traefik"
      annotations:
         # https://crt.the-mori.com/2020-11-15-traefik-v2-unifi-controller-kubernetes
         traefik.ingress.kubernetes.io/router.entrypoints: websecure #, websecure2
         traefik.ingress.kubernetes.io/router.tls: "true"
         traefik.ingress.kubernetes.io/preserve-host: "true"
         # IF YOU WANT TO EXPOSE UNIFI OWN 8443 PORT
         #traefik.http.services.unifi.loadbalancer.server.port: 8443
         #
         # TRUST UNIFI 8443 SERVICE
         traefik.ingress.kubernetes.io/service.serverstransport.insecureskipverify: "true"
         traefik.ingress.kubernetes.io/service.serversscheme: https

         ingress.kubernetes.io/whitelist-x-forwarded-for: "true"
         hajimari.io/enable: "true"
         hajimari.io/icon: lan
         hajimari.io/group: network
         hajimari.io/appName: unifi
      hosts:
      - host: unifi.{{ args.domain }}
        paths:
        - path: /
          pathType: Prefix
      tls:
      - hosts:
         - unifi.{{ args.domain }}

    portal:
      enabled: false
      ingressClassName: "traefik"
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
        traefik.ingress.kubernetes.io/preserve-host: "true"
        traefik.ingress.kubernetes.io/service.serverstransport.insecureskipverify: "true"
        traefik.ingress.kubernetes.io/service.serversscheme: https
        ingress.kubernetes.io/whitelist-x-forwarded-for: "true"
      hosts:
      - host: unifip.{{ args.domain }}
        paths:
        - path: /
          pathType: Prefix
      tls:
      - hosts:
         - unifip.{{ args.domain }}
         

