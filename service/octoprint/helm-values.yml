# vim: ft=yaml syntax=yaml sts=2 ts=2 sw=2

{{ context | to_yaml }}

# best practice defaults
common:
  image:
    repository: octoprint/octoprint
    tag: latest
    pullPolicy: IfNotPresent

  service:
    main:
      type: LoadBalancer
      ports:
        http:
          port: 80
   
  securityContext:
    # -- (bool) Privileged securityContext may be required if USB devics are accessed directly through the host machine
    privileged: true


  enableServiceLinks: false
  env:
    #TZ: "Europe/Prague"
    ENABLE_MJPG_STREAMER: "false"
    MJPG_STREAMER_INPUT:  # "-y -n -r 640x480"
    CAMERA_DEV:  # /dev/video0
    OCTOPRINT_PORT: "5000"
  persistence:
    data:
      enabled: true
      mountPath: /octoprint
      # injected
      # storageClass: "longhorn"
      accessMode: ReadWriteOnce
      size: 3Gi  # or larger prints, octoleaps use more
    printer:
      enabled: true
      type: hostPath
      hostPath: /dev/ttyACM0

  ingress:
    main:
      enabled: true
      # injected
      # ingressClassName: "traefik"
      annotations:
        # injected
        # traefik.ingress.kubernetes.io/router.entrypoints: websecure
        # traefik.ingress.kubernetes.io/router.tls: "true"
        hajimari.io/enable: "true"
        hajimari.io/icon: printer
        hajimari.io/group: home
        hajimari.io/appName: octoprint
      hosts:
      - host: octoprint.{{ get_var(["octoprint.externalDomain", "args.domain"]) }}
        paths:
        - path: /
          pathType: Prefix
      tls:
      - hosts:
        - octoprint.{{ get_var(["octoprint.externalDomain", "args.domain"]) }}

